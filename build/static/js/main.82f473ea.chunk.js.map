{"version":3,"sources":["config.js","Services/token-service.js","Nav/Nav.js","Results/Results.js","MainPage/MainPage.js","Services/auth-api-service.js","ValidationError.js","SignUpForm/SignUpForm.js","LoginForm/LoginForm.js","BucketList/BucketList.js","PackingList/PackingList.js","Routes/PublicOnlyRoute.js","Routes/PrivateOnlyRoute.js","HomePage/HomePage.js","App/App.js","index.js"],"names":["config","jwtDecode","require","TokenService","getAuthToken","window","sessionStorage","getItem","clearAuthToken","removeItem","hasAuthToken","makeBasicAuthToken","email","password","btoa","concat","saveAuthToken","token","setItem","getUserEmail","sub","saveUserId","userid","getUserId","Nav","handleLogoutClick","react_default","a","createElement","className","react_router_dom","onClick","this","to","title","href","role","renderLogoutLink","renderLoginLink","Component","Results","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","snippet","name","poi_id","user_id","e","preventDefault","updatetravelData","travelData","id","postTravelData","currentToken","fetch","method","body","JSON","stringify","headers","Content-Type","Authorization","then","res","console","log","ok","json","error","alert","_this2","itemsDisplay","length","tripDataResults","map","items","index","onSubmit","handleSubmit","key","type","setState","renderResults","React","MainPage","searchTerm","searchCoord","tripData","term","termConvert","termConstruct","charAt","toUpperCase","slice","lat","getPlaceseData","searchCoordUpdate","searchURL","encodeURIComponent","response","Error","statusText","responseJSON","results","geometry","location","lng","_this3","url","data","pois","catch","err","_this4","Nav_Nav_Nav","required","placeholder","onChange","searchTermUpdate","target","value","src_Results_Results","AuthApiService","postLogin","credentials","content-type","Promise","reject","postUser","user","ValidationError","hasError","message","Fragment","SignUpForm","handleAddUser","ev","_ev$target","first_name","last_name","first_nameValid","last_nameValid","emailValid","passwordValid","formValid","validationMessages","validateFirstName","validateLastName","validateEmail","_this5","validatePassword","fieldValue","fieldErrors","objectSpread","validationMessage","trim","_this6","addFirstName","addLastName","addEmail","addPassword","LoginForm","handleSubmitJwtAuth","hidediv","authToken","htmlFor","defaultProps","onLoginSuccess","BucketList","deleteUserData","searchTermUpdateName","searchTermUpdateSnippet","postUserData","usersData","reload","renderNew","oldData","newOne","defineProperty","handleClick","handlePost","fetchList","PackingList","isChecked","newData","newId","checked","renderUpdated","newOnes","i","push","selectedData","newTwo","list","fetchPackList","fetchNewPackList","d","idx","PublicOnlyRoute","_ref","component","objectWithoutProperties","react_router","assign","render","componentProps","PrivateRoute","pathname","from","HomePage","src_MainPage_MainPage","renderLoggedInPath","renderLoginForm","App","isBoxVisible","toggleBox","path","exact","ReactDOM","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.82f473ea.chunk.js","sourcesContent":["export default {\r\n    API_ENDPOINT: 'https://adventure-ahead.herokuapp.com/',\r\n    TOKEN_KEY: 'sip-rate-client-auth-token',\r\n}","\r\nimport React from 'react';\r\nimport config from '../config';\r\nconst jwtDecode = require('jwt-decode');\r\n\r\nconst TokenService = {\r\n  getAuthToken() {\r\n    return window.sessionStorage.getItem(config.TOKEN_KEY)\r\n  },\r\n  clearAuthToken() {\r\n    window.sessionStorage.removeItem(config.TOKEN_KEY)\r\n  },\r\n  hasAuthToken() {\r\n    return !!TokenService.getAuthToken()\r\n  },\r\n  makeBasicAuthToken(email, password) {\r\n    return window.btoa(`${email}:${password}`)\r\n  },\r\n  saveAuthToken(token) {\r\n    window.sessionStorage.setItem(config.TOKEN_KEY, token)\r\n  },\r\n  getUserEmail() {\r\n    let token = TokenService.getAuthToken();\r\n    if (!token) {\r\n      return \"Guest\";\r\n    }\r\n    let decoded = jwtDecode(token);\r\n    return decoded.sub;\r\n  },\r\n  saveUserId(userid) {\r\n    window.sessionStorage.setItem('userid', userid);\r\n  },\r\n  getUserId(userid) {\r\n    return window.sessionStorage.getItem('userid', userid)\r\n  }\r\n};\r\n\r\n\r\nexport default TokenService;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Nav.css';\r\nimport TokenService from '../Services/token-service';\r\n\r\n\r\nexport default class Nav extends Component {\r\n\t    handleLogoutClick = () => {\r\n        TokenService.clearAuthToken()\r\n    }\r\n\t\t\r\n\trenderLogoutLink() {\r\n        return (\r\n            <div className='header-logged-in'>\r\n                <Link\r\n                    className='logout-link'\r\n                    onClick={this.handleLogoutClick}\r\n                    to='/'>\r\n                    <span title='Logout'></span>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n// display link in header to register/sign up \r\n    renderLoginLink() {\r\n        return (\r\n            <div className='header-logged-out'>\r\n                <Link\r\n                    className='register-link'\r\n                    to='/signup'>\r\n                    Register {' '}\r\n                    <i className=\"fas fa-user-plus\" />\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\t\t\r\n  render() {\r\n    return (\r\n      <div className='Nav'>\r\n        <li><a href='/search'>\r\n          Search     \r\n        </a></li>\r\n       <li> <a href='/bucketlist'>\r\n          Bucketlist   \r\n        </a></li>\r\n\t\t<li> <a href='/packinglist'> \r\n          Packing List\r\n        </a></li>\r\n\t\t<li>  \r\n            <a href='/'\r\n                    className='logout-link'\r\n                    onClick={this.handleLogoutClick}\r\n                    to='/'>\r\n                    Log out\r\n              \r\n        </a></li>\r\n                <nav role=\"navigation\">\r\n                    {TokenService.hasAuthToken()\r\n                        ? this.renderLogoutLink()\r\n                        : this.renderLoginLink()}\r\n                </nav>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport TokenService from '../Services/token-service';\nimport config from '../config';\nimport './Results.scss';\nimport Nav from '../Nav/Nav'\n\n\n\nclass Results extends React.Component {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\tsnippet: '',\n\t\t\t\tname: '',\n\t\t\t\tpoi_id:'',\n\t\t\t\tuser_id:''\n\t\t\t}\n\t\t\tconst newuserid = TokenService.getUserId('userid');\n\t\t\tconst currentToken = TokenService.getAuthToken();\n\t\t}\n\t// handle the form submission\n\t\thandleSubmit(e) {\n\t\t\te.preventDefault();\n\t\t\tthis.updatetravelData();\t\n\t\t}\n\t\n\t\n\t//updates the data thats in the currents state to what user clicked on and calls the post finction \n\t\tupdatetravelData () {\n\t\t\tlet travelData = { \n\t\t\t\tpoi_id: this.state.id,\n\t\t\t\tname: this.state.name,\n\t\t\t\tsnippet: this.state.snippet,\n\t\t\t\tuser_id: TokenService.getUserId('userid')\n\t\t\t}\n\t\t\tthis.postTravelData(travelData);\n\t\t}\n\t\n\t\n\t// post the data that was chosen by the user to the DB\n\t\tpostTravelData(travelData) {\n\t\t\tconst newJwt = this.currentToken\n\t\t\t\t\tfetch(`https://adventure-ahead.herokuapp.com/listTravel`, {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: JSON.stringify(travelData),\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'Authorization': `bearer ${TokenService.getAuthToken()}`\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t.then(res => {\n\t\t\t\t\t\tconsole.log(res)\n\t\t\t\t\tif (!res.ok) {\n\t\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\t\tthrow error\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\talert('Added to Bucket List')\n\t\t}\n\t\t\n\t\n// displays the API result + updates the current state on Add to bucket list button click\n\trenderResults() {\n\t\tconst tripData= this.props.itemsDisplay\n\t\t\tif (tripData.length > 0) {\t\t\n        \tconst tripDataResults = this.props.itemsDisplay.map((items, index) => {\n        return (\n\t\t\t<form onSubmit = {e => this.handleSubmit(e)}>\n          \t\t<li key={index}>\n\t\t\t\t\t<h7>\"{items.name}\" </h7> \n\t\t\t\t\t<h8>{items.snippet} </h8>\n\t\t\t\t\t<button type=\"submit\" className=\"btn4 draw-border\"  onClick={() => this.setState({id:items.id,name:items.name,snippet:items.snippet})}> Add to bucket list </button>\n\t\t  \t\t</li>\n\t\t\t</form>\n\t\t\t);\n    \t});\n\t\t\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"text-box3\">\n\t\t\t\t\t<div className=\"scrollbar3\"  id=\"style-4\">\n\t\t\t\t\t\t{tripDataResults}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\t\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.renderResults()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\t\t\nexport default Results;\n\t\n","\nimport React from 'react';\nimport Results from '../Results/Results'\nimport Nav from '../Nav/Nav'\nimport './MainPage.css'\n\nconst mapsAPIKey = 'AIzaSyC6FqHjgnVXKVBLaFq-o28f77NjQXeBeJI';\nconst geocodeURL = 'https://maps.googleapis.com/maps/api/geocode/json?';\n\n\n\nclass MainPage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsearchTerm: '',\n\t\t\tsearchCoord: {},\n\t\t\ttripData: {},\n\t\t}\n\t}\n\n\n\t// update the state with the input by the user\n\tsearchTermUpdate(term, termConvert) {\n\t\t//convert to cappital letter\n\t\tlet termConstruct = term.charAt(0).toUpperCase() + term.slice(1);\n\t\t//update the state to the current search term\n\t\tthis.setState({\n\t\t\tsearchTerm: termConstruct\n\t\t})\n\t}\n\n\t//update the state with the place coordinates recieved from Google maps\n\tsearchCoordUpdate(searchCoord, lat) {\n\t\tthis.setState({\n\t\t\tsearchCoord: searchCoord\n\t\t})\n\t\tthis.getPlaceseData(this.state.searchCoord);\n\t}\n\n\t// fetch Google API to convert the search terms place to longitude and altidude\n\n\ttermConvert(searchTerm, searchCoordUpdate) {\n\t\tlet searchURL = geocodeURL + `address=${encodeURIComponent(searchTerm)}&key=${mapsAPIKey}`;\n\t\tfetch(searchURL)\n\t\t\t.then(response => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response.json();\n\t\t\t\t}\n\t\t\t\tthrow new Error(response.statusText)\n\t\t\t})\n\t\t\t.then(responseJSON => {\n\t\t\t\tlet searchCoord = responseJSON.results[0].geometry.location\n\t\t\t\tthis.searchCoordUpdate(searchCoord)\n\t\t\t})\n\n\t}\n //handle submit and call to convert the code for Upper case\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tthis.termConvert(this.state.searchTerm);\n\t}\n\t\n\n// fetch the triposo data for the hughlights\n\tgetPlaceseData(searchCoord, lat, lng) {\n\t\tconst url = `https://www.triposo.com/api/20181213/local_highlights.json?latitude=${searchCoord.lat}&longitude=${searchCoord.lng}&account=8BQS3LVU&token=5zzqjt9251m8pucznb1yjy3c430qq65y&poi_fields=id,name,snippet`;\n\t\t\tfetch(url)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (!response.ok) {\n\t\t\t\t\t\tthrow new Error(response.statusText);\n\t\t\t\t\t}\n\t\t\t\t\treturn response.json();\n\t\t\t\t})\n\t\t\t\t.then(data => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttripData: data.results[0].pois\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t})\n\t\t}\n\n\trender() {\n\t\treturn ( \n\t\t\t<div>\n\t\t\t\t<Nav />\n\t\t\t\t\t<div className = 'Appy' >\n\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t<form onSubmit = {e => this.handleSubmit(e)} >\n\t\t\t\t\t\t\t\t<div className = \"search-section top\" >\n\t\t\t\t\t\t\t\t\t<h4>SEARCH FOR LOCAL HIGHLIGHTS IN <br></br> YOUR DESTINATION CITY </h4>\n\t\t\t\t\t\t\t\t\t<input required className = \"search__input\"\n\t\t\t\t\t\t   \t\t\t\tplaceholder = \"Where is your Trip to?\"\n\t\t\t\t           \t\t\t\ttype = \"text\"\n\t\t\t\t\t\t\t\t\t\tonChange = {e => this.searchTermUpdate(e.target.value)}/> \n\t\t\t\t\t\t\t\t</div>   \n\t\t\t\t\t\t\t\t<div className = \"buttons-coll\" >\n\t\t\t\t\t\t\t\t\t<button type = \"submit\" className = \"btn3 draw-border\" > \n\t\t\t\t\t\t\t\t\t\t<span> \n\t\t\t\t\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</button > \n\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t</form> \n\n\t\t\t\t<Results \n\t\t\t\t\titemsDisplay={this.state.tripData}\n\t\t\t\t/>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MainPage;","\r\n\r\nconst AuthApiService = {\r\n  postLogin(credentials) {\r\n    return fetch(`https://adventure-ahead.herokuapp.com/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    })\r\n      .then(response =>\r\n        (!response.ok)\r\n          ? response.json().then(e => Promise.reject(e))\r\n          : response.json()\r\n      )\r\n  },\r\n  postUser(user) {\r\n    return fetch(`https://adventure-ahead.herokuapp.com/user`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(e => Promise.reject(e))\r\n          : res.json()\r\n      )\r\n  },\r\n}\r\n\r\n\r\nexport default AuthApiService","import React from 'react'\r\n\r\n\r\nexport default function ValidationError(props) {\r\n    if(props.hasError) {\r\n        return(\r\n            <div className='validation-error'>\r\n            {props.message}\r\n            </div>\r\n        );\r\n    }\r\n    return<></>\r\n}","\nimport React from 'react';\nimport AuthApiService from '../Services/auth-api-service';\nimport ValidationError from '../ValidationError';\nimport './SignUpForm.scss'\nimport { Route ,Link } from 'react-router-dom'\n\nclass SignUpForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            first_name: '',\n            last_name: '',\n            email: '',\n            password: '',\n            error: null,\n            first_nameValid: false,\n            last_nameValid: false,\n            emailValid: false,\n            passwordValid: false,\n            formValid: false,\n            validationMessages: {\n                first_name: '',\n                last_name: '',\n                email: '',\n                password: ''\n            }\n        }\n    }\n \n\n    handleAddUser = ev => {\n        ev.preventDefault()\n        const { first_name, last_name, email, password } = ev.target\n        this.setState({ error: null })\n        AuthApiService.postUser({\n            first_name: first_name.value,\n            last_name: last_name.value,\n            email: email.value,\n            password: password.value,\n        })\n            .then(user => {\n                first_name.value = ''\n                last_name.value = ''\n                email.value = ''\n                password.value = ''\n\n                window.location = '/';\n            })\n            .catch(res => {\n                this.setState({ error: res.error })\n            })\n    }\n\n    addFirstName(first_name) {\n        this.setState({ first_name }, () => { this.validateFirstName(first_name) });\n    }\n\n    addLastName(last_name) {\n        this.setState({ last_name }, () => { this.validateLastName(last_name) });\n    }\n\n    addEmail(email) {\n        this.setState({ email }, () => { this.validateEmail(email) });\n    }\n\n    addPassword(password) {\n        this.setState({ password }, () => { this.validatePassword(password) });\n    }\n\n    validateFirstName(fieldValue) {\n        const fieldErrors = { ...this.state.validationMessage }\n        let hasError = false;\n\n        fieldValue = fieldValue.trim();\n        if (fieldValue.length === 0) {\n            fieldErrors.first_name = 'First name is required';\n            hasError = true;\n        } else {\n            if (fieldValue.length < 2) {\n                fieldErrors.first_name = 'First name must be at least 2 characters long';\n                hasError = true;\n            } else {\n                fieldErrors.first_name = '';\n                hasError = false;\n            }\n        }\n\n        this.setState({\n            validationMessages: fieldErrors,\n            first_nameValid: !hasError\n        }, this.formValid);\n    }\n\n    validateLastName(fieldValue) {\n        const fieldErrors = { ...this.state.validationMessage }\n        let hasError = false;\n\n        fieldValue = fieldValue.trim();\n        if (fieldValue.length === 0) {\n            fieldErrors.last_name = 'Last name is required';\n            hasError = true;\n        } else {\n            if (fieldValue.length < 2) {\n                fieldErrors.last_name = 'Last name must be at least 2 characters long';\n                hasError = true;\n            } else {\n                fieldErrors.last_name = '';\n                hasError = false;\n            }\n        }\n\n        this.setState({\n            validationMessages: fieldErrors,\n            last_nameValid: !hasError\n        }, this.formValid);\n    }\n\n    validateEmail(fieldValue) {\n        const fieldErrors = { ...this.state.validationMessage }\n        let hasError = false;\n\n        fieldValue = fieldValue.trim();\n        if (fieldValue.length === 0) {\n            fieldErrors.email = 'Email is required';\n            hasError = true;\n        } else {\n            if (fieldValue.length < 3) {\n                fieldErrors.email = 'Email must be at least 3 characters long';\n                hasError = true;\n            } else {\n                fieldErrors.email = '';\n                hasError = false;\n            }\n        }\n\n        this.setState({\n            validationMessages: fieldErrors,\n            emailValid: !hasError\n        }, this.formValid);\n    }\n\n    validatePassword(fieldValue) {\n        const fieldErrors = { ...this.state.validationMessage }\n        let hasError = false;\n\n        fieldValue = fieldValue.trim();\n        if (fieldValue.length === 0) {\n            fieldErrors.password = 'Password is required';\n            hasError = true;\n        } else {\n            if (fieldValue.length < 8) {\n                fieldErrors.password = 'Password must be at least 8 characters long with 1 uppercase 1 number and 1 symbol';\n                hasError = true;\n            } else {\n                fieldErrors.password = '';\n                hasError = false;\n            }\n        }\n\n        this.setState({\n            validationMessages: fieldErrors,\n            passwordValid: !hasError\n        }, this.formValid);\n    }\n\n\n    render() {\n        const { error } = this.state\n        return (\n            <section className='signup-page'>\n              \n                <form className='sign-up-main' onSubmit={this.handleAddUser}>\n\t\t\t\n                    <fieldset className='sign-up-fieldset'>\n\t\t\t  <h4>Sign up to get the best of your next Trip!</h4>\n                        <label>First Name</label>\n                        <input\n                            type='text'\n                            name='first_name'\n                            id='first-name-input'\n                            onChange={e => this.addFirstName(e.target.value)}\n                        />\n                        <ValidationError hasError={!this.state.first_nameValid} message={this.state.validationMessages.first_name} />\n\n                        <label>Last Name</label>\n                        <input\n                            type='text'\n                            name='last_name'\n                            id='last-name-input'\n                            onChange={e => this.addLastName(e.target.value)}\n                        />\n                        <ValidationError hasError={!this.state.last_nameValid} message={this.state.validationMessages.last_name} />\n\n                        <label>Email</label>\n                        <input\n                            type='text'\n                            name='email'\n                            id='email-input'\n                            onChange={e => this.addEmail(e.target.value)}\n                        />\n                        <ValidationError hasError={!this.state.emailValid} message={this.state.validationMessages.email} />\n                        <label>Password</label>\n                        <input\n                            type='text'\n                            name='password'\n                            id='password-input'\n                            onChange={e => this.addPassword(e.target.value)}\n\n                        />\n                        <ValidationError hasError={!this.state.passwordValid} message={this.state.validationMessages.password} />\n                        <div className=\"error\" role=\"alert\">\n                            {error && <span className=\"signup-error\">{error}</span>}\n                        </div>\n                        <button type=\"submit\" className='btn3 draw-border'>Sign Up</button>\n                        <ul>\n                            <li>*All fields are required</li>\n                            <li>*Password must have 1 uppercase, one symbol, and at least 8 characters</li>\n                        </ul>\n                    </fieldset>\n                </form>\n            </section>\n        )\n    }\n}\n\n\nexport default SignUpForm;","\nimport React from 'react'\nimport './LoginForm.scss'\nimport AuthApiService from '../Services/auth-api-service'\nimport TokenService from '../Services/token-service'\nimport ValidationError from '../ValidationError'\nimport { Route ,Link ,Redirect } from 'react-router-dom'\nimport Nav from '../Nav/Nav'\n\nclass LoginForm extends React.Component {\n    static defaultProps = {\n        onLoginSuccess: () => { }\n    };\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n\t\t\thidediv:false,\n            password: '',\n            user: '',\n            error: null,\n            emailValid: false,\n            passwordValid: false,\n            validationMessages: {\n                email: '',\n                password: '',\n            }\n        }\n    }\n\n\n    // Handle user login and create auth token \n    handleSubmitJwtAuth = ev => {\n        ev.preventDefault();\n        this.setState({ error: null , hidediv:true});\n        const { email, password } = ev.target\n        AuthApiService.postLogin({\n            email: email.value,\n            password: password.value,\n        })\n            .then(res => {\n                email.value = ''\n                password.value = ''\n                TokenService.saveAuthToken(res.authToken)\n                TokenService.saveUserId(res.userid)\n                window.location = '/search';\n            })\n            .catch(res => {\n                this.setState({ error: res.error })\n            })\n    }\n\n    addEmail(email) {\n        this.setState({ email }, () => { this.validateEmail(email) });\n    }\n\n    addPassword(password) {\n        this.setState({ password }, () => { this.validatePassword(password) });\n    }\n\n    validateEmail(fieldValue) {\n        const fieldErrors = { ...this.state.validationMessage }\n        let hasError = false;\n\n        fieldValue = fieldValue.trim();\n        if (fieldValue.length === 0) {\n            fieldErrors.email = 'Email is required';\n            hasError = true;\n        } else {\n            if (fieldValue.length < 3) {\n                fieldErrors.email = 'Email must be at least 3 characters long';\n                hasError = true;\n            } else {\n                fieldErrors.email = '';\n                hasError = false;\n            }\n        }\n\n        this.setState({\n            validationMessages: fieldErrors,\n            emailValid: !hasError\n        }, this.formValid);\n    }\n\n    validatePassword(fieldValue) {\n        const fieldErrors = { ...this.state.validationMessage }\n        let hasError = false;\n\n        fieldValue = fieldValue.trim();\n        if (fieldValue.length === 0) {\n            fieldErrors.password = 'Password is required';\n            hasError = true;\n        } else {\n            if (fieldValue.length < 8) {\n                fieldErrors.password = 'Password must be at least 8 characters long';\n                hasError = true;\n            } else {\n                fieldErrors.password = '';\n                hasError = false;\n            }\n        }\n\n        this.setState({\n            validationMessages: fieldErrors,\n            passwordValid: !hasError\n        }, this.formValid);\n    }\n\n    formValid() {\n        this.setState({\n            formValid: this.state.emailValid && this.state.passwordValid\n        });\n    }\n\n    render() {\n        const { error } = this.state;\n        return (\n\t\t\t<div>\n            \t<div className=\"login-form\" >\n                \t<form className=\"sign-in-main\" onSubmit={this.handleSubmitJwtAuth}>\n\t\t\t\t\t\t<fieldset className='login-fieldset'>\n                        \t<h4 className='sign-in-legend'>Account Log In</h4>\n                        \t<label htmlFor='email-input' className='sign-in-email'>Email</label>\n                        \t<input\n                            \ttype='text'\n                            \tname='email'\n                            \tid='email-input'\n                            \tvalue={this.state.email}\n                            \tonChange={e => this.addEmail(e.target.value)}\n                        \t/>\n                        \t<ValidationError className='validation-error'\n                            \thasError={!this.state.emailValid} message={this.state.validationMessages.email} />\n                        \t<label htmlFor='password-input' className='sign-in-password'>Password</label>\n                        \t<input\n                            \ttype='password'\n                            \tname='password'\n                            \tid='password-input'\n                            \tvalue={this.state.password}\n                            \tonChange={e => this.addPassword(e.target.value)}\n                        \t/>\n                        \t<ValidationError hasError={!this.state.passwordValid} message={this.state.validationMessages.password} />\n                        \t<div className=\"error\" role=\"alert\">\n                            \t{error && <span className=\"login-error\">{error}</span>}\n                            \t<p>*Email/Password are case sensitive</p>\n                        \t</div>\n                        \t<button type=\"submit\" className='btn3 draw-border'>Sign In</button>\n                        \t<section className='demo-login-info'>\n                            \t<h2>Demo login info:</h2>\n                            \t<p>Email: testuser101@email.com</p>\n                            \t<p>Password: Testuser101!</p>\n                        \t</section>\n                    \t</fieldset>\n                \t</form>\n            \t</div>\n\t\t\t</div>\n        )\n    }\n\n}\nexport default LoginForm;","import React, { Component } from 'react'\nimport TokenService from '../Services/token-service';\nimport Nav from '../Nav/Nav';\nimport './BucketList.scss'\n\n\nexport default class BucketList extends Component{\n\t\t\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\tdata: [],\n\t\t\t\tuser_id:'',\n\t\t\t\tid:'',\n\t\t\t\tname:\"\",\n\t\t\t\tsnippet:\"\"\n\t\t\t}\n\t\t}\n\n\t//handle click to delete the specific item\n\thandleClick(id){\n\t\tthis.deleteUserData(id);\n\t}\n\t//handle submit of the whole delete form to prevent subimt\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t}\n\t\n\t//handle post of the users item to the bucketlist\n\thandlePost(e){\n\t\te.preventDefault();\n\t\tthis.searchTermUpdateName();\n\t\tthis.searchTermUpdateSnippet();\n\t\tthis.postUserData();\n\t}\n\t// updates the state of the users input item name\n\tsearchTermUpdateName(name) {\n\t\tthis.setState({\n\t\t\t\tname: name\n\t\t\t})\n\t\t}\n\t// updates the state of the users input item snippet\n\tsearchTermUpdateSnippet(snippet) {\n\t\t\tthis.setState({\n\t\t\t\tsnippet:snippet\n\t\t\t})\n\t\t}\n\n\t//posts the new item of the bucketlist to the db, refreshes the window \n\tpostUserData() {\n\t\tlet usersData = {\n\t\t\t\t\"name\": this.state.name,\n\t\t\t\t\"snippet\": this.state.snippet,\n\t\t\t \t\"user_id\": TokenService.getUserId('userid')\n\t\t\t}\n\t\t\tfetch(`https://adventure-ahead.herokuapp.com/listTravel/${TokenService.getUserId('userid')}/`, {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: JSON.stringify(usersData),\n\t\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'Authorization': `bearer ${TokenService.getAuthToken()}`\n\t\t\t\t}})\n\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (!res.ok) {\n\t\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\t\tthrow error\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t.then (window.location.reload())\n\t}\n\t\n\t\n\t// deletes the selected item on the bucketlist from the DB\n\n\tdeleteUserData(id){\n\t\tconsole.log(id)\n\t\t\tfetch(`https://adventure-ahead.herokuapp.com/listTravel/${TokenService.getUserId('userid')}/${id}`, {\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\tbody: JSON.stringify(id),\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (!res.ok) {\n\t\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\t\tthrow error\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t.then (window.location.reload())\n\t\t}\n\t// fetches the usersr bucketlist from the DB\n\tfetchList() {\n\tconst url = `https://adventure-ahead.herokuapp.com/listTravel/${TokenService.getUserId('userid')}`\n\t\t\tfetch(url)\n\t\t\t.then(response => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(response.statusText);\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(data => {\t\n\t\t\tthis.renderNew(data)\n\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t\n\t\t}\n\t// Displays the new data that was fetchet from the DB\n\trenderNew(data){\n\t\tconst oldData= this.state.data\n\t\tif (data.length !== oldData.length){ \t\n\t\t\tthis.setState({\n\t\t\tdata:data\n\t\t})}\n\t\t\telse {\n\t\t\t\tconsole.log('nothing here')\n\t\t\t}\n\t}\n\n\t\n\t\n\t\n\trender() {\n\t\tconst newOne = this.state.data.map((items, id) => \n\t\t\t<div>\t\n\t\t\t\t<ul>\t\t\t\t\t\t  \n\t\t\t\t\t<li key={id}><h7>\"{items.name}\" </h7>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li key={id}><h8>{items.snippet}</h8>\n\t\t\t\t\t</li>\n\t\t\t\t \t<form className=\"deleteFromList\" onSubmit={e => this.handleSubmit(e)}>\n\t\t\t\t\t<button className=\"btn3 draw-border\" type=\"submit\"  onClick={() => this.handleClick(items.id)} className=\"deleteItemButton\">DELETE</button>\t\n\t\t\t\t\t</form>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Nav />\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<h4>MY BUCKETLIST </h4>\n\t\t\t\t\t\t{newOne}\n\t\t\t\t\t\t<form className=\"userInput\" onSubmit={e => this.handlePost(e)}>\n\t\t\t\t\t\t\t<div className = \"container\">\n\t\t\t\t\t\t\t\t<h6> Add a place of your own </h6>\n\t\t\t\t\t\t\t\t<input type = \"text\" required\n\t\t\t\t\t\t\t\t\tonChange = {e => this.searchTermUpdateName(e.target.value)}\n\t\t\t\t\t\t\t\t\tplaceholder = \"Name\" >\n\t\t\t\t\t\t\t\t</input> \n\t\t\t\t\t\t\t\t<input type = \"text\" required\n\t\t\t\t\t\t\t\t\tonChange = {e => this.searchTermUpdateSnippet(e.target.value)}\n\t\t\t\t\t\t\t\t\tplaceholder = \"Description\" >\n\t\t\t\t\t\t\t\t</input> \n\t\t\t\t\t\t\t\t<div className = \"buttons-coll\" >\n\t\t\t\t\t\t\t\t\t<button type = \"submit\" className =\"btn3 draw-border\"> <span> Add </span>\n\t\t\t\t\t\t\t\t</button> \n\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t</div> \n\t\t\t\t\t</form>\n\t\t\t\t\t{this.fetchList()}\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\nimport TokenService from '../Services/token-service';\nimport './PackingList.css';\nimport Nav from '../Nav/Nav'\n\nexport default class PackingList extends Component{\n\t\t\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\tdata: [],\n\t\t\t\tuser_id:'',\n\t\t\t\tid:'',\n\t\t\t\tisChecked:false,\n\t\t\t\tnewData:[],\n\t\t\t}\n\t\t}\n\n//handle the post of the new item as checked into db : sets state of that item to checked then calls the post function\n\thandlePost(e){\n\t\te.preventDefault();\n\t\tthis.setState({\n\t\t\tisChecked:true,\n\t\t\thidediv:true\n\t\t})\n\t\tthis.postUserData(e.target.value,true);\n\t}\n\n\t//updates the the updated item to the db as checked, reload the window\n\tpostUserData(newId, isChecked) {\n\t\tlet usersData = {\n\t\t\t\t\"checked\":true\n\t\t\t}\n\t\t\n\t\tlet url = `https://adventure-ahead.herokuapp.com/packData/${TokenService.getUserId('userid')}/${newId}`\n\t\tconsole.log(url,newId)\n\t\t\tfetch(url, {\n\t\t\t\t\tmethod: 'PATCH',\n\t\t\t\t\tbody: JSON.stringify(usersData),\n\t\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'Authorization': `bearer ${TokenService.getAuthToken()}`\n\t\t\t\t}})\n\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (!res.ok) {\n\t\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\t\tthrow error\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('Nothing Here')\n\t\t\t}\n\t\t\t\t})\n\t\twindow.location.reload()\n\t}\n\t\n\t// fetches again the list with the updated data and calls function that will only show data that is \"checked\"\n\t\nfetchNewPackList() {\n\tconst url = `https://adventure-ahead.herokuapp.com/packData/${TokenService.getUserId('userid')}`\n\t\t\tfetch(url)\n\t\t\t.then(response => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(response.statusText);\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(data => {\t\n\t\t\tthis.renderUpdated(data)\n\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t}\n\t\n\t//shows the new data from the db where item checked is only true\nrenderUpdated(data){\n\tlet newData = this.state.newData\n\tlet newOnes =[];\n\t\tfor (let i=0; i< data.length; i++) {\n\t\t\tif (data[i].checked === true) {\n\t\t\t\tnewOnes.push(data[i])\n\t\t\t  }\n\t\t}\n\t\t\tif (newData.length !== newOnes.length) {\n\t\t\t\tthis.setState ({\n\t\t\t\t  newData:newOnes\n\t\t\t})\n\t\t\t} else\n\t\t\t{\n\t\t\t\tconsole.log('nothing here')\n\t\t\t}\n\n}\n\n\t//fetches the list of all items on the list for the first time, calls function to display data\n\t\n\tfetchPackList() {\n\tconst url = `https://adventure-ahead.herokuapp.com/packData/${TokenService.getUserId('userid')}`\n\t\t\tfetch(url)\n\t\t\t.then(response => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(response.statusText);\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(data => {\t\n\t\t\tthis.renderNew(data)\n\t\t\t\t\n\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t}\n\t\n\t// shows the data on the to pack list\n\trenderNew(data){\n\t\tconst oldData= this.state.data\n\t\tif (data.length !== oldData.length){ \n\t\t\tthis.setState({\n\t\t\tdata:data\n\t\t});\n\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('nothing here')\n\t\t\t}\n\t}\n\n\trender() {\n\t\tconst selectedData = this.state.newData\n\t\tconst newTwo = this.state.data.map((items, id) => \n \t\t\t<div>\t\t\t\t\t \n\t\t\t\t<form className=\"userUpdate\">\n\t\t\t\t\t<ul>\t\t\t\t\t\t  \n\t\t\t\t\t\t<li key={id} >{items.list} \n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<button className=\"btn5 draw-border\" value={items.id} type=\"submit\" onClick ={e =>this.handlePost(e)}>Add to Packed List  </button>\n\t\t\t\t\t</ul>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t\t)\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Nav />\n\t\t\t\t{this.fetchPackList()}\n\t\t\t\t{this.fetchNewPackList()}\n\t\t\t\t{this.selectedData}\n\t\t\t\t<div className=\"text-box\">\n\t\t\t\t\t<div className=\"scrollbar\"  id=\"style-4\">\n\t\t\t  \t\t\t<h4>ITEMS TO PACK </h4>\n\t\t\t\t\t\t\t{newTwo}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"text-box2\">\n\t\t\t\t<div className=\"scrollbar\"  id=\"style-4\">\n\t\t\t\t\t<ul id=\"special\">\n  \t\t\t\t\t\t<h4>PACKED ITEMS</h4> {selectedData.map((d, idx) =>\n         \t\t\t\t\t<li key={idx}>{d.list}</li>)} \n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","\r\nimport React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport TokenService from '../Services/token-service'\r\n\r\nexport default function PublicOnlyRoute({ component, ...props }) {\r\n  const Component = component\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={componentProps => (\r\n        TokenService.hasAuthToken()\r\n          ? <Redirect to={'/'} />\r\n          : <Component {...componentProps} />\r\n      )}\r\n    />\r\n  )\r\n\r\n}","\r\nimport React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport TokenService from '../Services/token-service'\r\n\r\nexport default function PrivateRoute({ component, ...props }) {\r\n  const Component = component\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={componentProps => (\r\n        TokenService.hasAuthToken()\r\n          ? <Component {...componentProps} />\r\n          : <Redirect\r\n              to={{\r\n                pathname: '/',\r\n                state: { from: componentProps.location }\r\n              }}\r\n            />\r\n      )}\r\n    />\r\n  )\r\n\r\n}","\nimport React from 'react';\nimport LoginForm from '../LoginForm/LoginForm';\nimport TokenService from '../Services/token-service';\nimport BucketList from '../BucketList/BucketList';\nimport PackingList from '../PackingList/PackingList';\nimport { Route ,Link } from 'react-router-dom';\nimport Nav from '../Nav/Nav'\nimport './HomePage.css';\nimport MainPage from '../MainPage/MainPage';\n\n\n\nclass HomePage extends React.Component {\n    handleLogoutClick = () => {\n        TokenService.clearAuthToken()\n    }\n\t\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t hidediv: false\n\t\t}\n\t}\n\t\n  handleToggleClick() {\n    this.setState({\n      hidediv: true\n    });\n  }\n\t\n\n// Display all reviews path once user is logged in \n    renderLoggedInPath() {\n        return (\n            <section className='header-logged-in-profile'>\n\t\t\t\t<MainPage />\n\t\t\t </section>\n        )\n    }\n\n// Display login form and welcome page when user is logged out\n    renderLoginForm() {\n        return (\n     \t<div>\n\t\t</div>\n      )\n    }\n    render() {\n        return (\n\t\t\t<div>\n            \t<section className='home-screen'>\n                \t{TokenService.hasAuthToken()\n                    \t? this.renderLoggedInPath()\n\t\t\t\t\t\t: this.renderLoginForm()}\n            \t</section>\n\t\t\t</div>\n        )\n    }\n}\nexport default HomePage;","import React, { Component } from 'react'\nimport { Route ,Link } from 'react-router-dom'\nimport MainPage from '../MainPage/MainPage'\nimport SignUpForm from '../SignUpForm/SignUpForm';\nimport LoginForm from '../LoginForm/LoginForm';\nimport TokenService from '../Services/token-service';\nimport BucketList from '../BucketList/BucketList';\nimport PackingList from '../PackingList/PackingList';\nimport Nav from '../Nav/Nav'\nimport './App.scss';\nimport PublicOnlyRoute from '../Routes/PublicOnlyRoute';\nimport PrivateRoute from '../Routes/PrivateOnlyRoute';\nimport HomePage from '../HomePage/HomePage';\n\n\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuser:'',\n\t\t\terror:null,\n  \t\t\tisBoxVisible:false\n\t\t}\n\t}\n\t\n  toggleBox() {\n    this.setState({\n      isBoxVisible: true\n    });\n  }\n\t\n\t\n\trender() {\n\t\t const { isBoxVisible } = this.state;\n\t\t\treturn ( \n\t\t\t<div>\n\t\t\t\t<div className = 'App'>\n\t\t\t\t\t<div className=\"hero\">\n\t\t\t\t\t\t<div className=\"Header\" >\n\t\t\t\t\t\t\t<h5>ADVENTURE AHEAD </h5>\n\t\t\t\t\t\t\t<h1>  Wanna be as ready as possible for your next trip? <br></br> Sign in, explore local highlights in <br></br>the city you are visiting,add them to your Bucketlist and  <br></br>then pack for the trip<br></br> with the ultimate Packing Checklist. </h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'isBoxVisible ? \"\" : \" hidden\"'}>\n\t\t\t\t\t\t<div className=\"sign\" >\n\t\t\t\t\t\t\t<Link to='/login' className=\"btn draw-border\" onClick={e =>this.toggleBox()} > Sign In </Link>\n\t\t\t\t\t\t\t\t<h2> Don't have a user? Sign Up here </h2>\n\t\t\t\t\t\t\t<Link to='/signup'  className=\"btn2 draw-border-two\" onClick={e =>this.toggleBox()}> Sign Up </Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<Route path='/' exact component={HomePage} />\n\t\t\t\t<PrivateRoute path='/search' exact component={MainPage} />\n\t\t\t\t<PrivateRoute path='/bucketList' exact component={BucketList} />\n\t\t\t\t<PrivateRoute path='/packingList' exact component={PackingList} />\n\t\t\t \t<PublicOnlyRoute path='/signup' exact component={SignUpForm} />\n\t\t\t \t<PublicOnlyRoute path='/login'  exact component={LoginForm} />\n\t\t\t</div>\n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App/App';\n\n\nReactDOM.render(\n\t<BrowserRouter>\n     <App />\n   </BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}